{"version":3,"sources":["components/Note/Note.js","components/Form/Form.js","initFetch.js","App.js","reportWebVitals.js","index.js"],"names":["Note","className","id","this","props","text","href","onClick","onDeleteClick","bind","React","Component","Form","textRef","createRef","prevProps","form","current","focus","handleFormSubmit","onSubmit","handleInputChange","onChange","event","preventDefault","htmlFor","type","name","value","ref","rows","autoComplete","required","baseUrl","process","get","url","Promise","resolve","reject","fetch","then","response","json","data","catch","error","post","body","method","headers","JSON","stringify","del","App","state","notes","handleFormChange","handleDeleteClick","setState","console","log","_","prevState","length","window","scrollTo","outerHeight","target","map","note","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88a5cb7e.chunk.js","sourcesContent":["import React from 'react';\nimport './Note.css';\n\nclass Note extends React.Component {\n  render() {\n    return (\n      <div className=\"Note\" id={this.props.id}>\n        <p>{this.props.text}</p>\n        <a\n          href=\"#0\"\n          className=\"Note__control-delete\"\n          onClick={this.props.onDeleteClick.bind(this)}\n        >&times;\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Note;\n","import React from 'react';\nimport './Form.css';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.form.text === '') {\n      this.textRef.current.focus();\n    }\n  }\n\n  render() {\n    const {\n      onSubmit: handleFormSubmit,\n      onChange: handleInputChange,\n      form,\n    } = this.props;\n\n    return (\n      <form\n        className=\"Form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleFormSubmit(form);\n        }}\n      >\n        <div className=\"Form-control\">\n          <label htmlFor=\"text\">New note</label>\n          <textarea\n            className=\"Form-control__text\"\n            type=\"text\"\n            id=\"text\"\n            name=\"text\"\n            value={form.text}\n            onChange={handleInputChange}\n            ref={this.textRef}\n            rows=\"3\"\n            autoComplete=\"off\"\n            required\n          />\n        </div>\n        <button\n          className=\"Form-control__button-add\"\n          type=\"submit\"\n        >\n          &#10148;\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","export default function initFetch(baseUrl) {\n  function get(url) {\n    return new Promise((resolve, reject) => {\n      fetch(baseUrl + url)\n        .then((response) => response.json())\n        .then((data) => {\n          if (!data) {\n            return reject(data);\n          }\n          resolve(data);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  function post(url, body) {\n    return new Promise((resolve, reject) => {\n      fetch(baseUrl + url, {\n        ...{\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(body),\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (!data) {\n            return reject(data);\n          }\n          resolve(data);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  function del(url) {\n    return new Promise((resolve, reject) => {\n      fetch(baseUrl + url, { method: \"delete\" })\n        .then((response) => response.json())\n        .then((data) => {\n          if (!data) {\n            return reject(data);\n          }\n          resolve(data);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  return { get, post, del };\n}\n","import React from 'react';\nimport './App.css';\nimport Note from './components/Note/Note';\nimport Form from './components/Form/Form';\nimport initFetch from './initFetch';\nconst { get, post, del } = initFetch(process.env.REACT_APP_CURRENT_URL);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n      form: { text: '123' },\n    }\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    get('notes/')\n      .then((data) => {\n        this.setState({ notes: data });\n      })\n      .catch((error) => console.log(\"Could not load notes\", error));\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (this.state.notes.length > prevState.notes.length) {\n      window.scrollTo(0, window.outerHeight);\n    }\n  }\n\n  handleFormChange({ target }) {\n    const { name, value } = target;\n\n    this.setState({form: { ...this.state.form, [name]: value }});\n  }\n\n  handleFormSubmit(form) {\n    post('notes/', { text: form.text })\n      .then((data) => {\n        this.setState({ notes: data });\n      })\n      .catch((error) => console.log(\"Could not upload the note\", error));\n\n    this.setState({ form: { text: '' } });\n  }\n\n  handleDeleteClick(id) {\n    del(`notes/${id}`, { text: this.state.form.text })\n      .then((data) => {\n        this.setState({ notes: data });\n      })\n      .catch((error) => console.log(\"Could not delete the note\", error));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-wrapper\">\n          <h1 className=\"App-title\">Notes</h1>\n          <div className=\"App-notes-container\">\n            {this.state.notes.map((note) => {\n              return (\n                <Note\n                  key={note.id}\n                  id={note.id}\n                  text={note.text}\n                  onDeleteClick={() => this.handleDeleteClick(note.id)}\n                />\n              );\n            })}\n          </div>\n          <Form\n            onSubmit={this.handleFormSubmit}\n            onChange={this.handleFormChange}\n            form={this.state.form}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}